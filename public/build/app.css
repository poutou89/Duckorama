/*!***************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[1]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[4].oneOf[1].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[3]!./assets/styles/app.scss ***!
  \***************************************************************************************************************************************************************************************************************************************************************************/
@charset "UTF-8";
header {
  background-color: rgb(3, 63, 99);
  padding: 3vh;
  box-shadow: 0px 4px 4px rgb(78, 114, 90);
}
header .container {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
header .container .logo {
  width: 100px;
}
header .container .logo a img {
  background-color: rgb(3, 63, 99);
  width: 100%;
  transition: all 0.4s;
}
header .container .logo a img:hover {
  background-color: rgb(124, 152, 133);
  border-radius: 100%;
  box-shadow: 4px 4px 4px rgb(78, 114, 90);
}
header .container nav {
  display: flex;
  align-items: center;
  gap: 8vh;
}
header .container nav .main-nav {
  display: flex;
  gap: 10%;
  list-style: none;
  margin: 0 4vh 0 0;
  padding: 0;
}
header .container nav .main-nav li a {
  text-decoration: none;
  color: rgb(231, 240, 13);
  font-family: "Fascinate_Inline";
  font-size: 32px;
  text-shadow: 2px 1px 0 black;
  transition: color 0.3s;
}
header .container nav .main-nav li a:hover {
  color: rgb(124, 152, 133);
}
header .container nav .menu {
  margin-left: 20px;
}
header .container nav .menu button#burger {
  display: block;
  background: transparent;
  border: none;
  cursor: pointer;
  transition: all 0.3s;
}
header .container nav .menu button#burger:hover {
  background-color: rgb(124, 152, 133);
  border-radius: 12px;
  box-shadow: 4px 4px 4px rgb(78, 114, 90);
}
header .container nav .menu button#burger img {
  width: 32px;
  height: 32px;
}
header .container nav #navLinks {
  display: none;
  flex-direction: column;
  position: absolute;
  top: 130px;
  right: 8%;
  background-color: rgb(3, 63, 99);
  padding: 1rem;
  border-bottom-left-radius: 8px;
  border-bottom-right-radius: 8px;
  box-shadow: 4px 4px 4px rgb(78, 114, 90);
  z-index: 999;
  list-style: none;
  margin: 0;
}
header .container nav #navLinks .mobile-only {
  display: none;
}
header .container nav #navLinks li a {
  text-decoration: none;
  color: rgb(231, 240, 13);
  font-family: "Fascinate_Inline";
  font-size: 32px;
  text-shadow: 2px 1px 0 black;
  transition: color 0.3s;
}
header .container nav #navLinks li a:hover {
  color: rgb(124, 152, 133);
}
header .container nav #navLinks p span {
  color: rgb(231, 240, 13);
}
header .container nav #navLinks.active {
  display: flex;
  align-items: center;
}
@media screen and (max-width: 768px) {
  header .container nav .main-nav {
    display: none;
  }
  header .container nav #navLinks {
    display: none;
  }
  header .container nav #navLinks .mobile-only {
    display: block;
  }
  header .container nav #navLinks.active {
    display: flex;
    align-items: center;
  }
}

body {
  margin: 0 auto;
  padding: 0;
  font-family: "Roboto";
}

.container {
  width: 80%;
  margin: 0 auto;
  max-width: 1440px;
}

h1, h2, h3, h4, h5, h6 {
  font-family: "Fascinate_Inline";
  text-shadow: 0px 1px 0px black;
}

h1 {
  font-size: 48px;
}

h2 {
  font-size: 40px;
}

h3 {
  font-size: 32px;
}

@font-face {
  font-family: "Roboto";
  src: url(/build/fonts/Roboto-Regular.5dd91892.ttf);
}
@font-face {
  font-family: "Fascinate_Inline";
  src: url(/build/fonts/FascinateInline-Regular.8c324f34.ttf);
}
body {
  background-color: rgb(124, 152, 133);
}

#home .container {
  display: flex;
  flex-direction: column;
  align-items: center;
}
#home .container h1 {
  text-align: center;
  padding: 4vh 0 0 0;
}
#home .container h1 span {
  color: rgb(231, 240, 13);
}
#home .container p {
  width: 60%;
  text-align: center;
}
#home .container p span {
  color: rgb(231, 240, 13);
}
#home .container h3 span {
  color: rgb(231, 240, 13);
}
#home .canards-liste {
  width: 80%;
  margin: 0 auto;
  display: flex;
  gap: 4vh;
  flex-wrap: wrap;
  justify-content: center;
}
#home .canards-liste a {
  width: 45%;
  background-color: rgba(3, 63, 99, 0.6);
  text-decoration: none;
  color: rgb(231, 240, 13);
  border-radius: 12px;
  box-shadow: 2px 2px 2px rgba(3, 63, 99, 0.6);
  transition: all 0.2s;
}
#home .canards-liste a .canard-card {
  display: flex;
  justify-content: space-between;
}
#home .canards-liste a .canard-card .canard-card-text {
  padding-left: 4vh;
}
#home .canards-liste a .canard-card .canard-card-image {
  width: 50%;
  height: 35vh;
  padding: 2vh;
}
#home .canards-liste a .canard-card .canard-card-image img {
  width: 100%;
  height: 100%;
  border-radius: 12px;
}
#home .canards-liste a:hover {
  box-shadow: 8px 8px 8px rgba(3, 63, 99, 0.6);
  color: rgb(231, 240, 13);
  background-color: rgb(3, 63, 99);
}

#galery .container {
  display: flex;
  justify-content: flex-end;
}
#galery .container a {
  text-decoration: none;
  padding: 2vh 1.5vh;
  background-color: rgb(231, 240, 13);
  border-radius: 12px;
  margin: 2vh 0 0 0;
  border: 2px solid rgb(231, 240, 13);
  color: rgb(3, 63, 99);
  transition: all 0.2s ease-out;
}
#galery .container a:hover {
  background-color: rgb(3, 63, 99);
  color: rgb(231, 240, 13);
  box-shadow: 4px 4px 1px rgba(3, 63, 99, 0.4);
}
#galery .container-card {
  width: 80%;
  margin: 0 auto;
  display: flex;
  gap: 4vh;
  flex-wrap: wrap;
  justify-content: center;
}
#galery .container-card a {
  display: flex;
  margin: 2vh 0 0 0;
  text-decoration: none;
  color: rgb(124, 152, 133);
  flex-wrap: wrap;
}
#galery .container-card a .card {
  background-color: rgba(3, 63, 99, 0.8);
  padding: 2vh;
  border-radius: 10px;
  transition: all 0.2s;
  height: 50vh;
  width: 30vh;
  display: flex;
  flex-direction: column;
  animation: fadeInUp 0.8s ease both;
}
#galery .container-card a .card .img-canard {
  width: 100%;
  height: 55%;
}
#galery .container-card a .card .img-canard img {
  border-radius: 4px;
  height: 100%;
  width: 100%;
}
#galery .container-card a .card p, #galery .container-card a .card h4, #galery .container-card a .card ul {
  margin: 1vh 0 0 0;
  font-family: "Roboto";
}
#galery .container-card a .card p span {
  color: rgb(231, 240, 13);
}
#galery .container-card a .card ul li span {
  color: rgb(231, 240, 13);
}
#galery .container-card a .card:hover {
  background-color: rgb(3, 63, 99);
  box-shadow: 4px 4px 4px rgba(3, 63, 99, 0.6);
}
#galery .container-card a .card:hover p strong {
  color: white;
}
#galery .container-card a .card:hover h4 {
  color: white;
}

#connection .container {
  background-color: rgb(3, 63, 99);
  margin-top: 2vh;
  border-radius: 12px;
  padding: 2vh;
  width: 30%;
  box-shadow: 6px 6px 6px rgba(3, 63, 99, 0.6);
}
#connection .container h1 {
  text-align: center;
  color: rgb(231, 240, 13);
}
#connection .container form {
  display: flex;
  flex-direction: column;
  align-items: center;
}
#connection .container form label {
  color: rgb(231, 240, 13);
}
#connection .container form input {
  margin: 0.8vh 0 2vh 0;
}
#connection .container form button {
  margin: 2vh 0;
  padding: 1vh 1.5vh;
  border-radius: 8px;
  background-color: rgb(231, 240, 13);
  font-size: 16px;
  font-weight: 600;
  border: 2px solid rgb(231, 240, 13);
  color: rgb(3, 63, 99);
  box-shadow: 2px 2px 2px rgba(124, 152, 133, 0.6);
  transition: all 0.2s;
}
#connection .container form button:hover {
  color: rgb(231, 240, 13);
  background-color: rgb(3, 63, 99);
}

#unique .container-canard {
  width: 80%;
  margin: 4vh auto;
  display: flex;
  background-color: rgb(3, 63, 99);
  border-radius: 16px;
  box-shadow: 8px 8px 8px rgb(78, 114, 90);
}
#unique .container-canard .container-img {
  width: 50%;
}
#unique .container-canard .container-img img {
  border-top-left-radius: 16px;
  border-bottom-left-radius: 16px;
  height: 100%;
  width: 100%;
}
#unique .container-canard .container-text {
  width: 50%;
  display: flex;
  justify-content: center;
  flex-direction: column;
  padding: 1vh;
}
#unique .container-canard .container-text p {
  font-size: 32px;
  color: rgb(231, 240, 13);
  font-weight: 600;
}
#unique .container {
  margin-bottom: 16vh;
}
#unique .container-commentaire {
  display: flex;
  gap: 8vh;
  margin: 4vh auto;
  position: relative;
  width: 80%;
}
#unique .container-commentaire .duck {
  position: relative;
  width: 100px;
  height: 60px;
}
#unique .container-commentaire .body {
  background: yellow;
  width: 120px;
  height: 70px;
  border-radius: 50%;
}
#unique .container-commentaire .body strong {
  position: relative;
  top: 25px;
  left: 16px;
}
#unique .container-commentaire .head {
  background: yellow;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  position: absolute;
  top: -40px;
  left: 70px;
}
#unique .container-commentaire .beak {
  background: orange;
  width: 20px;
  height: 10px;
  border-radius: 0 50% 50% 0;
  position: absolute;
  top: 0px;
  left: 115px;
  rotate: 35deg;
}
#unique .container-commentaire .eye {
  background: black;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  position: absolute;
  top: -20px;
  left: 100px;
}
#unique .container-commentaire .bulle {
  position: absolute;
  bottom: 110%; /* Place la bulle au-dessus du canard */
  left: 50%;
  transform: translateX(-50%);
  background-color: white;
  color: black;
  padding: 8px 12px;
  border-radius: 20px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
  font-family: Arial, sans-serif;
  font-size: 14px;
  text-align: center;
  max-width: 150px; /* Limite la largeur max de la bulle */
  word-wrap: break-word; /* Force le texte à revenir à la ligne si trop long */
  white-space: normal; /* Important pour casser la ligne si besoin */
}
#unique .container-commentaire .bulle::after {
  content: "";
  position: absolute;
  top: 100%; /* Flèche sous la bulle */
  left: 50%;
  border-width: 8px;
  border-style: solid;
  border-color: white transparent transparent transparent;
}
#unique .container-form {
  display: flex;
  flex-direction: column;
  margin: 0 auto;
  width: 80%;
}

#contact .container {
  margin-top: 2vh;
  border-radius: 12px;
  padding: 2vh;
  width: 60%;
}
#contact .container h2 {
  text-align: center;
}
#contact .container h2 span {
  color: rgb(231, 240, 13);
}
#contact .container form {
  display: flex;
  flex-direction: column;
  align-items: center;
}
#contact .container form h1 {
  margin: 2vh 0 2vh 0;
  align-items: center;
  color: rgb(231, 240, 13);
}
#contact .container form label {
  color: rgb(231, 240, 13);
}
#contact .container form input {
  margin: 0.8vh 0 2vh 0;
}
#contact .container form button {
  margin: 2vh 0;
  padding: 1vh 1.5vh;
  border-radius: 8px;
  background-color: rgb(231, 240, 13);
  font-size: 16px;
  font-weight: 600;
  border: 2px solid rgb(231, 240, 13);
  color: rgb(3, 63, 99);
  box-shadow: 2px 2px 2px rgba(124, 152, 133, 0.6);
  transition: all 0.2s;
}
#contact .container form button:hover {
  color: rgb(231, 240, 13);
  background-color: rgb(3, 63, 99);
}

#create .container {
  background-color: rgb(3, 63, 99);
  margin-top: 2vh;
  border-radius: 12px;
  padding: 2vh;
  width: 30%;
  box-shadow: 6px 6px 6px rgba(3, 63, 99, 0.6);
}
#create .container form {
  display: flex;
  flex-direction: column;
  align-items: center;
}
#create .container form h1 {
  margin: 2vh 0 2vh 0;
  align-items: center;
  color: rgb(231, 240, 13);
}
#create .container form label {
  color: rgb(231, 240, 13);
}
#create .container form input {
  margin: 0.8vh 0 2vh 0;
}
#create .container form button {
  margin: 2vh 0;
  padding: 1vh 1.5vh;
  border-radius: 8px;
  background-color: rgb(231, 240, 13);
  font-size: 16px;
  font-weight: 600;
  border: 2px solid rgb(231, 240, 13);
  color: rgb(3, 63, 99);
  box-shadow: 2px 2px 2px rgba(124, 152, 133, 0.6);
  transition: all 0.2s;
}
#create .container form button:hover {
  color: rgb(231, 240, 13);
  background-color: rgb(3, 63, 99);
}

#canard {
  position: fixed;
  width: 80px;
  height: auto;
  bottom: 0;
  left: 0;
  cursor: pointer;
  z-index: 9999;
  transition: left 2s ease, bottom 2s ease;
}

#canard.moving {
  opacity: 0.8;
}

@media screen and (max-width: 1250px) {
  #home .canards-liste {
    flex-wrap: wrap;
    flex-direction: column;
  }
  #home .canards-liste a {
    width: 100%;
  }
}
@media screen and (max-width: 768px) {
  h2 {
    font-size: 28px;
  }
  #home .container {
    width: 92%;
  }
  #home .container p {
    width: 100%;
  }
  #home .canards-liste {
    flex-wrap: wrap;
    flex-direction: column;
  }
  #home .canards-liste a {
    width: 100%;
  }
  #unique .container-canard {
    flex-direction: column;
    align-items: center;
  }
  #unique .container-canard .container-img {
    margin-top: 2vh;
  }
  #unique .container-canard .container-img img {
    border-radius: 16px;
  }
  #unique .container-canard .container-text {
    align-self: flex-start;
    width: 100%;
  }
  #unique .container-canard .container-text p {
    font-size: 20px;
  }
  #contact .container {
    width: 92%;
  }
  #contact .container h2 {
    font-size: 20px;
  }
}
@media screen and (max-width: 660px) {
  #home .canards-liste a .canard-card {
    flex-direction: column-reverse;
    align-items: center;
  }
  #home .canards-liste a .canard-card .canard-card-image {
    height: inherit;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/